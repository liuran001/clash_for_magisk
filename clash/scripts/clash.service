#!/system/bin/sh

scripts=`realpath $0`
scripts_dir=`dirname ${scripts}`
. /data/clash/clash.config
rm -rf ${CFM_logs_file}

proxy_clash() {
    if [ ! -f ${Clash_run_path}/ip.dat ];then
        log "info: 正在获取免流ip..."
        baidumlip=$(ping -c 1 cloudnproxy.baidu.com | sed '1{s/[^(]*(//;s/).*//;q}')
        txmlip=$(ping -c 1 weixin.qq.com | sed '1{s/[^(]*(//;s/).*//;q}')
        echo "baidumlip=${baidumlip}\ntxmlip=${txmlip}">${Clash_run_path}/ip.dat
    fi
    if [ ${proxyGoogle} == "true" ];then
        log "info: 正在获取本机所有Google系app..."
        if [ ! -f ${Clash_run_path}/Google.dat ];then
            echo "\n">${Clash_run_path}/Google.dat
            for packages in $(pm list packages |awk -F : '{print$NF}')$(pm list packages -s |awk -F : '{print$NF}')
            do
                echo $packages | grep "google">>${Clash_run_path}/Google.dat
                echo $packages | grep "com.android.vending">>${Clash_run_path}/Google.dat
            done
        fi
    fi
}


start_clash() {
    ll /data/clash/template
    ln -s /data/clash/clash.yaml /data/clash/template
    if [ "${ipv6}" = "false" ] ; then
        for net in /proc/sys/net/ipv6/conf/{wlan*,*data*} ; do
            echo ${net} | grep -q wlan
            if [ $? -eq 0 ] ; then
                echo 0 > ${net}/accept_ra
            fi
            echo 1 > ${net}/disable_ipv6
        done
    else
        for net in /proc/sys/net/ipv6/conf/{wlan*,*data*} ; do
            echo ${net} | grep -q wlan
            if [ $? -eq 0 ] ; then
                echo 1 > ${net}/accept_ra
            fi
            echo 0 > ${net}/disable_ipv6
        done
    fi

    pid=`cat ${Clash_pid_file} 2> /dev/null`
    if (cat /proc/${pid}/cmdline | grep -q clash) ; then
        log "info: 检测到clash已启动,此次不启动."
        exit 1
    fi

    if [ "${Clash_tproxy_port}" == 0 ] || [ "${Clash_tproxy_port}" == ""  ]; then
        if [ "${Clash_tun_status}" != "true" ]; then
            log "err: tproxy和tun得二选一."
            exit 1
        fi
    fi
    
    if [ -f "${Clash_bin_path}" ] ; then
        mkdir -p ${Clash_run_path}
        chown ${Clash_user_group} ${Clash_bin_path}
        chmod ${Clash_permissions} ${Clash_bin_path}
        chown ${Clash_user_group} ${temporary_config_file}
        chmod 0644 ${temporary_config_file}

        ${busybox_path} crontab -c ${Clash_run_path} -r
        touch ${Clash_run_path}/root
        chmod 0600 ${Clash_run_path}/root

        if [ "${auto_updateGeoSite}" == "true" ]; then
            echo "${update_geoXInterval} ${scripts_dir}/clash.tool -u" > ${Clash_run_path}/root \
            && log "info: 自动更新GeoX定时已开启."
        fi

        if [ "${auto_updateSubcript}" == "true" ]; then
            echo "${update_subcriptInterval} ${scripts_dir}/clash.tool -s" > ${Clash_run_path}/root \
            && log "info: 自动更新订阅定时已开启."
        fi

        sed -i '/^[  ]*$/d' ${CFM_logs_file}
        if [ "${filter_local}" = "true" ] ; then
            com="${scripts_dir}/clash.tool -m ; sleep 10 ;${scripts_dir}/clash.tool -m ; sleep 10; ${scripts_dir}/clash.tool -m ;sleep 10; ${scripts_dir}/clash.tool -m;sleep 10;${scripts_dir}/clash.tool -m ; sleep 10;${scripts_dir}/clash.tool -m"
            echo "*/1 * * * * ${com}" >> ${Clash_run_path}/root && log "info: 自动绕过本地ip段已打开."
        fi
    else
        log "err: ${Clash_bin_name}内核丢失."
        exit 1
    fi
    if [ ! -f ${Clash_config_file} ];then
        log "err: 缺少config.yaml 订阅(节点)配置文件."
        exit 1
    fi
    if [ ! -f ${template_file} ];then
        log "err: 缺少clash.yaml clash配置文件."
        exit 1
    fi
    
    proxy_clash
    
    . ${Clash_run_path}/ip.dat
    log "info: 当前百度系免流ip:${baidumlip}"
    log "info: 当前腾讯系免流ip:${txmlip}"
    cp -f ${template_file} ${temporary_config_file}.swp && echo "\n" >> ${temporary_config_file}.swp
    sed -n -E '/^proxies:.*$/,$p' ${Clash_config_file} >> ${temporary_config_file}.swp
    echo "\n" >> ${temporary_config_file}.swp
    sed -i '/^[  ]*$/d' ${temporary_config_file}.swp
    mv -f ${temporary_config_file}.swp ${temporary_config_file}
    sed -i "s/百度系免流ip/${baidumlip}/g" ${temporary_config_file}
    sed -i "s/腾讯系免流ip/${txmlip}/g" ${temporary_config_file}
    if [ ! -f ${temporary_config_file} ];then
        log "err: 配置文件合并失败."
        exit 1
    else
        log "info: 配置文件合并成功."
    fi

    if [ -f ${temporary_config_file} ] && [ -f ${Clash_GeoIP_file} ] ; then
        if [ "$(md5sum ${Clash_config_file}|cut -d ' ' -f1)" == "a9a3d1fcd2f72c35a38967ade6be23c8" ];then
            log "err: 请不要直接使用模板! 请修改${Clash_config_file}配置"
            exit 1
        fi
        if $(${Clash_bin_path} -d ${Clash_data_dir} -t -f ${temporary_config_file} > /dev/null) ; then
            if [ "${Clash_tun_status}" == "true" ]; then
                mkdir -p /dev/net
                ln -sf /dev/tun /dev/net/tun
            fi
            mv /data/clash/run/kernel.log /data/clash/run/kernel.old.log
            ulimit -SHn 1000000
            nohup ${busybox_path} setuidgid ${Clash_user_group} ${Clash_bin_path} -d ${Clash_data_dir} -f ${temporary_config_file} > /data/clash/run/kernel.log 2>&1 &
            echo -n $! > ${Clash_pid_file}
            ${scripts_dir}/clash.tool -l
            log "info: 代理模式:${mode}"
            log "info: ${Clash_bin_name}内核已启动."
        else
            log "err: 配置有误，启动失败."
            exit 1
        fi
    else
        log "info: 缺少GeoIP.dat文件."
        exit 1
    fi


    if [ "${Clash_tun_status}" == "true" ]; then
        return
    fi
    if [ "${Clash_port_skipdetection}" == "false" ]; then
        sleep ${WaitClashStartTime}
        if ! (${scripts_dir}/clash.tool -p) ; then
            kill -15 `cat ${Clash_pid_file}`
            rm -rf ${Clash_pid_file}
            log "err: 端口未检测到,已停止${Clash_bin_name}内核以及后续逻辑."
            exit 1
        fi
    else
    log "info: 已跳过端口检查."
    fi
}

stop_clash() {
    kill -15 `cat ${Clash_pid_file}`
    log "info: 停止${Clash_bin_name}内核."
}

while getopts ":sk" signal ; do
    case ${signal} in
        s)
            start_clash
            ;;
        k)
            stop_clash
            ;;
        ?)
            echo ""
            ;;
    esac
done
